[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://dcaxptsila061"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8hpte"]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_iv1il"]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_nbumc"]
output_port_for_preview = 0
default_input_values = [0, 0.1, 1, 0.0, 2, 0.0]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4sbe3"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.1, 2, 0.0]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8bk60"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(2, 2, 1)]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_44nl5"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_oxj3y"]
output_port_for_preview = 0
expanded_output_ports = [0]
operator = 8

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_osk6l"]
default_input_values = [1, Vector2(2, 2), 2, Vector2(1, 1)]
expanded_output_ports = [0]
function = 1

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_cform"]
output_port_for_preview = 3
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_t2rqk"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5, 2, 1e-05]
function = 3

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_gj5nf"]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_03u5i"]
size = Vector2(520, 440)
expression = "vec2 v=uv.xy+off.xy;
s01=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.zy;
s21=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.yx;
s10=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.yz;
s12=1.0-clamp(dot(v,v),0,1);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7shi2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_2mva8"]
constant = Vector3(-0.05, 0, 0.05)

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:7
	vec2 n_out7p0 = UV;


// UVFunc:2
	vec2 n_in2p1 = vec2(2.00000, 2.00000);
	vec2 n_in2p2 = vec2(1.00000, 1.00000);
	vec2 n_out2p0 = (n_out7p0 - n_in2p2) * n_in2p1 + n_in2p2;


// Vector3Constant:9
	vec3 n_out9p0 = vec3(-0.050000, 0.000000, 0.050000);


	float n_out6p0;
	float n_out6p1;
	float n_out6p2;
	float n_out6p3;
// Expression:6
	n_out6p0 = 0.0;
	n_out6p1 = 0.0;
	n_out6p2 = 0.0;
	n_out6p3 = 0.0;
	{
		vec2 v=n_out2p0.xy+n_out9p0.xy;
		n_out6p0=1.0-clamp(dot(v,v),0,1);
		v=n_out2p0.xy+n_out9p0.zy;
		n_out6p1=1.0-clamp(dot(v,v),0,1);
		v=n_out2p0.xy+n_out9p0.yx;
		n_out6p2=1.0-clamp(dot(v,v),0,1);
		v=n_out2p0.xy+n_out9p0.yz;
		n_out6p3=1.0-clamp(dot(v,v),0,1);
	}


// FloatOp:10
	float n_out10p0 = n_out6p1 - n_out6p0;


// VectorCompose:12
	float n_in12p0 = 0.10000;
	float n_in12p1 = 0.00000;
	vec3 n_out12p0 = vec3(n_in12p0, n_in12p1, n_out10p0);


// FloatOp:11
	float n_out11p0 = n_out6p2 - n_out6p3;


// VectorCompose:13
	float n_in13p0 = 0.00000;
	float n_in13p1 = 0.10000;
	vec3 n_out13p0 = vec3(n_in13p0, n_in13p1, n_out11p0);


// VectorOp:19
	vec3 n_out19p0 = cross(n_out12p0, n_out13p0);


// VectorFunc:20
	vec3 n_out20p0 = normalize(n_out19p0);
	float n_out20p3 = n_out20p0.b;


// VectorOp:18
	vec3 n_in18p1 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_out18p0 = n_out20p0 + n_in18p1;


// VectorOp:17
	vec3 n_in17p1 = vec3(2.00000, 2.00000, 1.00000);
	vec3 n_out17p0 = n_out18p0 / n_in17p1;


// Output:0
	COLOR.rgb = n_out17p0;
	NORMAL_MAP = n_out17p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(4660, 1320)
nodes/fragment/2/node = SubResource("VisualShaderNodeUVFunc_osk6l")
nodes/fragment/2/position = Vector2(2020, 1080)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_03u5i")
nodes/fragment/6/position = Vector2(2320, 1060)
nodes/fragment/6/size = Vector2(520, 440)
nodes/fragment/6/input_ports = "0,3,uv;1,4,off;"
nodes/fragment/6/output_ports = "0,0,s01;1,0,s21;2,0,s10;3,0,s12;"
nodes/fragment/6/expression = "vec2 v=uv.xy+off.xy;
s01=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.zy;
s21=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.yx;
s10=1.0-clamp(dot(v,v),0,1);
v=uv.xy+off.yz;
s12=1.0-clamp(dot(v,v),0,1);"
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_7shi2")
nodes/fragment/7/position = Vector2(1600, 1100)
nodes/fragment/9/node = SubResource("VisualShaderNodeVec3Constant_2mva8")
nodes/fragment/9/position = Vector2(1600, 1260)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_8hpte")
nodes/fragment/10/position = Vector2(2940, 1080)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_iv1il")
nodes/fragment/11/position = Vector2(2940, 1460)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorCompose_nbumc")
nodes/fragment/12/position = Vector2(3200, 1020)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorCompose_4sbe3")
nodes/fragment/13/position = Vector2(3200, 1400)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_8bk60")
nodes/fragment/17/position = Vector2(4420, 1280)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorOp_44nl5")
nodes/fragment/18/position = Vector2(4240, 1260)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_oxj3y")
nodes/fragment/19/position = Vector2(3472.64, 1094.14)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorFunc_cform")
nodes/fragment/20/position = Vector2(3760, 1140)
nodes/fragment/21/node = SubResource("VisualShaderNodeCompare_t2rqk")
nodes/fragment/21/position = Vector2(4000, 1560)
nodes/fragment/22/node = SubResource("VisualShaderNodeCompare_gj5nf")
nodes/fragment/22/position = Vector2(4020, 1920)
nodes/fragment/connections = PackedInt32Array(9, 0, 6, 1, 7, 0, 2, 0, 2, 0, 6, 0, 10, 0, 12, 2, 11, 0, 13, 2, 18, 0, 17, 0, 17, 0, 0, 3, 17, 0, 0, 0, 19, 0, 20, 0, 20, 0, 18, 0, 12, 0, 19, 0, 13, 0, 19, 1, 6, 1, 10, 0, 6, 0, 10, 1, 6, 2, 11, 0, 6, 3, 11, 1, 20, 3, 21, 0, 20, 3, 22, 0)
